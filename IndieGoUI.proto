/*  runtime state-saving Map for Immediate-mode libraries
    Copyright (C) 2022  Igor Vasilenko

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.*/

// [START declaration]
syntax = "proto3";
package ui_serialization;


// UI data
// ---------------------------------------------------------
message region {
    float x = 1;
    float y = 2;
    float w = 3;
    float h = 4;
}

message region_size {
    float x = 1;
    float y = 2;
}

message StyleColor {
    float r = 1;
    float g = 2;
    float b = 3;
    float a = 4;
}

message Font {
    string name = 1;
    float size = 2;
}

message SkinnedProperty {
    region crop = 1;
    uint32 prop_type = 2;
}

message LayoutRow {
    float height = 1;
    repeated float cols_widths = 2;
}

message WidgetBase {
    string name = 1;
    region size_loc = 2;
    bool bordered = 3;
    bool titled = 4;
    bool minimizable = 5;
    bool scalable = 6;
    bool movable = 7;

    Font font = 8;
    
    // different display settings
    float border_size = 9; 
    region_size padding = 10;
	region_size spacing = 11;

    // on load when elements added to new row
    // it's size will be adjusted
    repeated LayoutRow rows = 12;

    // on load skinned element will call useSkinImage
    repeated SkinnedProperty skinned_props = 13;
    repeated StyleColor styled_props = 14;

}

message Element {
    string name = 1;
    string widget_name = 2;
    uint32 type = 3;
    uint32 elt_push_opt = 4;
    Font font = 5;

    // different display settings
    float border = 6; 
	float rounding = 7;
	region_size padding = 8;

    // on load skinned element will call useSkinImage
    repeated SkinnedProperty skinned_props = 9;
    repeated StyleColor styled_props = 10;

    string label = 11;
    uint32 text_align = 12;

    float width = 13;
    float height = 14;
    // TODO : add items from UI_ITEMS_LIST
}

message Widget {
    WidgetBase widget = 1;
    repeated Element elements = 2;
}

// Binary file to serialize ui to
message SerializedUI {
    // main manager loads fonts
    // font.name here records path
    // similar paths could be saved, just specifying font size
    repeated Font fonts = 1;
    repeated Widget widgets = 2;

    // saved path to image
    repeated string images = 3;
    optional uint32 skinning_image_idx = 4;
}

// [END messages]
